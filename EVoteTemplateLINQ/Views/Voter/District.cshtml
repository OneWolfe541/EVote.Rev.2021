@model EVote.DataModels.VoterDataModel

@{
    ViewBag.Title = "Edit District";
}

<br /><br />

<div style="font-size:1.2em;">
    Edit Voter
</div>

<div style="color:red">
    @ViewBag.Error
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr class="row-divider" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BarCode)

        <div class="form-group">
            @Html.LabelFor(model => model.VoterID, "Roll Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3" >
                <div style="margin-top:7px;">
                    @Html.DisplayFor(model => model.VoterID, new { htmlAttributes = new { @class = "form-control" } })                    
                </div>
                @Html.ValidationMessageFor(model => model.VoterID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.FirstName)
                    </div>
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.MiddleName, "Middle Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.MiddleName)
                    </div>
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.LastName)
                    </div>
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Generation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.Generation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Generation)
                    </div>
                    @Html.ValidationMessageFor(model => model.Generation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @if (ViewBag.Maiden == "True")
        {
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.MaidenName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.MaidenName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.MaidenName)
                    </div>
                    @Html.ValidationMessageFor(model => model.MaidenName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        }
        else
        {
            @Html.HiddenFor(model => model.MaidenName, new { htmlAttributes = new { @class = "form-control" } })
        }

        <hr class="row-divider" />

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.DOB, "Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.DOBSearch, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.DOB)
                        @Html.HiddenFor(model => model.DOBSearch)
                    </div>
                    @Html.ValidationMessageFor(model => model.DOBSearch, "", new { @class = "text-danger" })
                </div>

                @if (Session["ShowDistrict"].ToString() == "True")
                {
                @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.District, (IEnumerable<SelectListItem>)ViewBag.DistrictList, null, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.District)
                    @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                </div>
                }
                else
                {
                    <input id="District" name="District" type="hidden" value="1" />
                    <input id="ComboNo" name="ComboNo" type="hidden" value="1" />
                }
            </div>
        </div>

        <hr class="row-divider" />

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Address1, "Address 1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.Address1, new { htmlAttributes = new { @class = "form -control" } })
                        @Html.HiddenFor(model => model.Address1)
                    </div>
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Address2, "Address 2", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.Address2, new { htmlAttributes = new { @class = "form -control" } })
                        @Html.HiddenFor(model => model.Address2)
                    </div>
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.City)
                    </div>
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.State)
                    </div>
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.Zip)
                    </div>
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr class="row-divider" />

        @if (0 == 1)
        {       

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.TempAddress1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TempAddress1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TempAddress1, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.TempAddress2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TempAddress2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TempAddress2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.TempCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TempCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TempCity, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.TempState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TempState, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TempState, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.TempZip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.TempZip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TempZip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr class="row-divider" />

        }
        else
        {
            @Html.HiddenFor(model => model.TempUsed)
            @Html.HiddenFor(model => model.TempAddress1)
            @Html.HiddenFor(model => model.TempAddress2)
            @Html.HiddenFor(model => model.TempCity)
            @Html.HiddenFor(model => model.TempState)
            @Html.HiddenFor(model => model.TempZip)
        }

        @if (0 == 1)
        {
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.LogCode, "Voter Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @*@Html.DropDownListFor(model => model.LogCode, (IEnumerable<SelectListItem>)ViewBag.LogCodeList, null, new { @class = "form-control" })*@
                    @Html.HiddenFor(model => model.LogCode)
                    <div style="margin-top:7px;">
                        @ViewBag.VoterStatus
                    </div>
                    @Html.ValidationMessageFor(model => model.LogCode, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.UserName, "Voted At", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @*@Html.DropDownListFor(model => model.UserName, (IEnumerable<SelectListItem>)ViewBag.SitesList, null, new { @class = "form-control" })*@                    
                    <div style="margin-top:7px;">
                        @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        }

        <div id="divHidden">
            @Html.HiddenFor(model => model.ElectionID)
            @Html.HiddenFor(model => model.DOBSearch)
            @Html.HiddenFor(model => model.ComboNo)
            @Html.HiddenFor(model => model.VoterID)
            @Html.HiddenFor(model => model.PhysicalAddress1)
            @Html.HiddenFor(model => model.PhysicalCSZ)
            @Html.HiddenFor(model => model.TempProvince)
            @Html.HiddenFor(model => model.TempCountry)
            @Html.HiddenFor(model => model.SpoiledReasonID)
            @Html.HiddenFor(model => model.UserName)
            @Html.HiddenFor(model => model.LogDate)
            @Html.HiddenFor(model => model.LogToday)

            @Html.HiddenFor(model => model.VoterNo)
            @*@Html.HiddenFor(model => model.SignRefused)*@
        </div>
        
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                    <a href="~/Voter/Index" id="btnCancel" class="btn btn-danger">Cancel</a>
                </div>
            </div>

     </div> @*Form Horizontal*@
}
